
%option yylineno noyywrap nounput nounistd always-interactive

%{
	#include "handle.hh"
%}

COMMENT      #[^\r\n]*
WHITESPACE   [ \f\t]+
NAME         [_a-zA-Z][_a-zA-Z0-9]*

BIN_NUMBER   0[bB](?:_?[01])+
OCT_NUMBER   0[oO](?:_?[0-7])+
DEC_NUMBER   (?:0(?:_?0)*|[1-9](?:_?[0-9])*)
HEX_NUMBER   0[xX](?:_?[0-9a-fA-F])+
FLOAT_NUMBER ([0-9](?:_?[0-9])*\.(?:[0-9](?:_?[0-9])*)?|\.[0-9](?:_?[0-9])*)

STRING       ('[^\n'\\]*(?:\\.[^\n'\\]*)*'|\"[^\n\"\\]*(?:\\.[^\n\"\\]*)*\")

%% /* ================================= Begin ============================== */

"("            return handle::LPAR();
")"            return handle::RPAR();
"["            return handle::LSQB();
"]"            return handle::RSQB();
":"            return handle::COLON();
","            return handle::COMMA();
";"            return handle::SEMI();
"+"            return handle::PLUS();
"-"            return handle::MINUS();
"*"            return handle::STAR();
"/"            return handle::SLASH();
"|"            return handle::VBAR();
"&"            return handle::AMPER();
"<"            return handle::LESS();
">"            return handle::GREATER();
"="            return handle::EQUAL();
"."            return handle::DOT();
"%"            return handle::PERCENT();
"{"            return handle::LBRACE();
"}"            return handle::RBRACE();
"=="           return handle::EQEQUAL();
"!="           return handle::NOTEQUAL();
"<="           return handle::LESSEQUAL();
">="           return handle::GREATEREQUAL();
"~"            return handle::TILDE();
"^"            return handle::CIRCUMFLEX();
"<<"           return handle::LEFTSHIFT();
">>"           return handle::RIGHTSHIFT();
"**"           return handle::DOUBLESTAR();
"+="           return handle::PLUSEQUAL();
"-="           return handle::MINEQUAL();
"*="           return handle::STAREQUAL();
"/="           return handle::SLASHEQUAL();
"%="           return handle::PERCENTEQUAL();
"&="           return handle::AMPEREQUAL();
"|="           return handle::VBAREQUAL();
"^="           return handle::CIRCUMFLEXEQUAL();
"<<="          return handle::LEFTSHIFTEQUAL();
">>="          return handle::RIGHTSHIFTEQUAL();
"**="          return handle::DOUBLESTAREQUAL();
"//"           return handle::DOUBLESLASH();
"//="          return handle::DOUBLESLASHEQUAL();
"..."          return handle::ELLIPSIS();
"->"           return handle::RARROW();
"@"            return handle::AT();
"@="           return handle::ATEQUAL();

"def"          return handle::DEF();
"extern"       return handle::EXTERN();

{WHITESPACE}   return handle::WHITESPACE(yytext);
{COMMENT}      return handle::COMMENT(yytext);
{NAME}         return handle::NAME(yytext);
{BIN_NUMBER}   return handle::BIN_NUMBER(yytext);
{OCT_NUMBER}   return handle::OCT_NUMBER(yytext);
{DEC_NUMBER}   return handle::DEC_NUMBER(yytext);
{HEX_NUMBER}   return handle::HEX_NUMBER(yytext);
{FLOAT_NUMBER} return handle::FLOAT_NUMBER(yytext);
{STRING}       return handle::STRING(yytext);

.              /* ignore */

<<EOF>>        return handle::YYEOF();

%% /* ================================= End ============================== */
